{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\learning-react\\\\src\\\\ZingMP3\\\\HomePage\\\\Atoms\\\\CarouselSongNew\\\\CarouselSongNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"../Pagination/Pagination\";\nimport CarouselItem from \"../CarouselItem/CarouselItem\";\nimport { fetchNewSong, selectSongData, setPage, selectSongPage } from \"../../../../Redux/Song/songSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CarouselSongNew() {\n  _s();\n\n  const dispatch = useDispatch();\n  const song = useSelector(selectSongData); // const [song, setSongs] = useState([]);\n\n  const currentPage = useSelector(selectSongPage);\n  const [postPerPage] = useState(5);\n  useEffect( // eslint-disable-next-line react-hooks/exhaustive-deps\n  () => {\n    // db.collection(\"His\")\n    //   .get()\n    //   .then((snapshot) => {\n    //     setSongs(snapshot.docs.map(e => e.data()))\n    //   });\n    dispatch(fetchNewSong());\n  }, []);\n  if (song.length === 0) return null;\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPost = song[0].list.slice(indexOfFirstPost, indexOfLastPost); //set page\n\n  const paginate = page => dispatch(setPage(page));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CarouselTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"CarouselText\",\n        children: song[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postPerPage: postPerPage,\n        totalPost: song[0].list.length,\n        paginate: paginate,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Carousel\",\n      children: currentPost.map((item, i) => /*#__PURE__*/_jsxDEV(CarouselItem, {\n        item: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CarouselSongNew, \"WCIoDAKOSaVYTCPx0yhPZgtdrE0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CarouselSongNew;\nexport default CarouselSongNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarouselSongNew\");","map":{"version":3,"sources":["D:/REACTJS/learning-react/src/ZingMP3/HomePage/Atoms/CarouselSongNew/CarouselSongNew.js"],"names":["React","useEffect","useState","Pagination","CarouselItem","fetchNewSong","selectSongData","setPage","selectSongPage","useDispatch","useSelector","CarouselSongNew","dispatch","song","currentPage","postPerPage","length","indexOfLastPost","indexOfFirstPost","currentPost","list","slice","paginate","page","title","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,OAHF,EAIEC,cAJF,QAKO,kCALP;AAMA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,IAAI,GAAGH,WAAW,CAACJ,cAAD,CAAxB,CAFyB,CAGzB;;AACA,QAAMQ,WAAW,GAAGJ,WAAW,CAACF,cAAD,CAA/B;AACA,QAAM,CAACO,WAAD,IAAgBb,QAAQ,CAAC,CAAD,CAA9B;AACAD,EAAAA,SAAS,EACP;AACA,QAAM;AACJ;AACA;AACA;AACA;AACA;AACAW,IAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;AACD,GATM,EAUP,EAVO,CAAT;AAYA,MAAIQ,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB,OAAO,IAAP;AACvB,QAAMC,eAAe,GAAGH,WAAW,GAAGC,WAAtC;AACA,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,WAA3C;AACA,QAAMI,WAAW,GAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,IAAR,CAAaC,KAAb,CAAmBH,gBAAnB,EAAqCD,eAArC,CAApB,CArByB,CAuBzB;;AACA,QAAMK,QAAQ,GAAIC,IAAD,IAAUX,QAAQ,CAACL,OAAO,CAACgB,IAAD,CAAR,CAAnC;;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA,kBAA6BV,IAAI,CAAC,CAAD,CAAJ,CAAQW;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,WAAW,EAAET,WADf;AAEE,QAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQO,IAAR,CAAaJ,MAF1B;AAGE,QAAA,QAAQ,EAAEM,QAHZ;AAIE,QAAA,WAAW,EAAER;AAJf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGK,WAAW,CAACM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,kBACf,QAAC,YAAD;AAAsB,QAAA,IAAI,EAAED;AAA5B,SAAmBC,CAAnB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAkBD;;GA3CQhB,e;UACUF,W,EACJC,W,EAEOA,W;;;KAJbC,e;AA4CT,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport CarouselItem from \"../CarouselItem/CarouselItem\";\r\nimport {\r\n  fetchNewSong,\r\n  selectSongData,\r\n  setPage,\r\n  selectSongPage,\r\n} from \"../../../../Redux/Song/songSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction CarouselSongNew() {\r\n  const dispatch = useDispatch();\r\n  const song = useSelector(selectSongData);\r\n  // const [song, setSongs] = useState([]);\r\n  const currentPage = useSelector(selectSongPage)\r\n  const [postPerPage] = useState(5);\r\n  useEffect(\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    () => {\r\n      // db.collection(\"His\")\r\n      //   .get()\r\n      //   .then((snapshot) => {\r\n      //     setSongs(snapshot.docs.map(e => e.data()))\r\n      //   });\r\n      dispatch(fetchNewSong());\r\n    },\r\n    []\r\n  );\r\n  if (song.length === 0) return null;\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n  const currentPost = song[0].list.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  //set page\r\n  const paginate = (page) => dispatch(setPage(page));\r\n  return (\r\n    <>\r\n      <div className=\"CarouselTitle\">\r\n        <p className=\"CarouselText\">{song[0].title}</p>\r\n        <Pagination\r\n          postPerPage={postPerPage}\r\n          totalPost={song[0].list.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n      <div className=\"Carousel\">\r\n        {currentPost.map((item, i) => (\r\n          <CarouselItem key={i} item={item} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default CarouselSongNew;\r\n"]},"metadata":{},"sourceType":"module"}