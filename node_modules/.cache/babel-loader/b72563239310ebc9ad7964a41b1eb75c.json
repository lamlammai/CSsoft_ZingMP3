{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\learning-react\\\\src\\\\Hooks\\\\Introduce.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useFriendStatus(friendID) {\n  _s();\n\n  const [count, setCount] = useState(5);\n  const [isOnline, setIsOnline] = useState(null);\n  useEffect(() => {\n    document.title = `Yot clicked ${count} time`;\n    ChatAPI.subscribeToFriendStatus(friendID.friend.id, handleStatusChange);\n    return () => {\n      ChatAPI.unsubscribeFromFriendStatus(friendID.friend.id, handleStatusChange);\n    };\n  });\n\n  function handleStatusChange(status) {\n    setIsOnline(status.isOnline);\n  }\n\n  return isOnline;\n}\n\n_s(useFriendStatus, \"/PVpq6t1ey5n9KRntOOxBWtPkOM=\");\n\nfunction FriendStatus(props) {\n  _s2();\n\n  const isOnline = useFriendStatus(props.friend.id);\n\n  if (isOnline === null) {\n    return 'Loading...';\n  }\n\n  return isOnline ? 'Online' : 'Offline';\n}\n\n_s2(FriendStatus, \"a3B569k9rI2h5KE8Nx8Iioa8o4I=\", false, function () {\n  return [useFriendStatus];\n});\n\n_c = FriendStatus;\n\nfunction FriendListItem(props) {\n  _s3();\n\n  const isOnline = useFriendStatus(props.friend.id);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      color: isOnline ? 'green' : 'black'\n    },\n    children: props.friend.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n} //   return (\n//     <>\n//       <div>\n//         <p>You click {count} times</p>\n//         <button onClick={() => setCount(count + 1)}>click me!</button>\n//       </div>\n//     </>\n//   );\n// }\n\n\n_s3(FriendListItem, \"a3B569k9rI2h5KE8Nx8Iioa8o4I=\", false, function () {\n  return [useFriendStatus];\n});\n\n_c2 = FriendListItem;\nexport default FriendListItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FriendStatus\");\n$RefreshReg$(_c2, \"FriendListItem\");","map":{"version":3,"sources":["D:/REACTJS/learning-react/src/Hooks/Introduce.js"],"names":["React","useEffect","useState","useFriendStatus","friendID","count","setCount","isOnline","setIsOnline","document","title","ChatAPI","subscribeToFriendStatus","friend","id","handleStatusChange","unsubscribeFromFriendStatus","status","FriendStatus","props","FriendListItem","color","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC,IAAD,CAAvC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACC,KAAT,GAAkB,eAAcL,KAAM,OAAtC;AACAM,IAAAA,OAAO,CAACC,uBAAR,CAAgCR,QAAQ,CAACS,MAAT,CAAgBC,EAAhD,EAAoDC,kBAApD;AACA,WAAO,MAAM;AACXJ,MAAAA,OAAO,CAACK,2BAAR,CAAoCZ,QAAQ,CAACS,MAAT,CAAgBC,EAApD,EAAwDC,kBAAxD;AACD,KAFD;AAGD,GANQ,CAAT;;AAOA,WAASA,kBAAT,CAA4BE,MAA5B,EAAmC;AAC/BT,IAAAA,WAAW,CAACS,MAAM,CAACV,QAAR,CAAX;AACH;;AACD,SAAOA,QAAP;AACD;;GAdQJ,e;;AAeT,SAASe,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAMZ,QAAQ,GAAGJ,eAAe,CAACgB,KAAK,CAACN,MAAN,CAAaC,EAAd,CAAhC;;AAEA,MAAIP,QAAQ,KAAK,IAAjB,EAAuB;AACrB,WAAO,YAAP;AACD;;AACD,SAAOA,QAAQ,GAAG,QAAH,GAAc,SAA7B;AACD;;IAPMW,Y;UACYf,e;;;KADZe,Y;;AAQP,SAASE,cAAT,CAAwBD,KAAxB,EAA+B;AAAA;;AAC7B,QAAMZ,QAAQ,GAAGJ,eAAe,CAACgB,KAAK,CAACN,MAAN,CAAaC,EAAd,CAAhC;AAEA,sBACE;AAAI,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAEd,QAAQ,GAAG,OAAH,GAAa;AAA9B,KAAX;AAAA,cACGY,KAAK,CAACN,MAAN,CAAaS;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,C,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAjBWF,c;UACUjB,e;;;MADViB,c;AAmBX,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n\r\nfunction useFriendStatus(friendID) {\r\n  const [count, setCount] = useState(5);\r\n  const [isOnline,setIsOnline] = useState(null);\r\n  useEffect(() => {\r\n    document.title = `Yot clicked ${count} time`;\r\n    ChatAPI.subscribeToFriendStatus(friendID.friend.id, handleStatusChange);\r\n    return () => {\r\n      ChatAPI.unsubscribeFromFriendStatus(friendID.friend.id, handleStatusChange);\r\n    };\r\n  });\r\n  function handleStatusChange(status){\r\n      setIsOnline(status.isOnline);\r\n  }\r\n  return isOnline;\r\n}\r\nfunction FriendStatus(props) {\r\n    const isOnline = useFriendStatus(props.friend.id);\r\n  \r\n    if (isOnline === null) {\r\n      return 'Loading...';\r\n    }\r\n    return isOnline ? 'Online' : 'Offline';\r\n  }\r\n  function FriendListItem(props) {\r\n    const isOnline = useFriendStatus(props.friend.id);\r\n  \r\n    return (\r\n      <li style={{ color: isOnline ? 'green' : 'black' }}>\r\n        {props.friend.name}\r\n      </li>\r\n    );\r\n  }\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <p>You click {count} times</p>\r\n//         <button onClick={() => setCount(count + 1)}>click me!</button>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default FriendListItem;\r\n"]},"metadata":{},"sourceType":"module"}