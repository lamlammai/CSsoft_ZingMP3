{"ast":null,"code":"import _regeneratorRuntime from\"D:/zingmp3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/zingmp3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import db from\"../../ZingMP3/HomePage/FirebaseConfig\";export var fetchNewSong=createAsyncThunk(\"song/fetch/new\",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return db.collection(\"His\").get();case 2:data=_context.sent;return _context.abrupt(\"return\",data.docs.map(function(e){return e.data();}));case 4:case\"end\":return _context.stop();}}},_callee);})));var songSlice=createSlice({name:\"song\",initialState:{data:[],error:null,loading:\"idle\",page:1},reducers:{setPage:function setPage(state,action){state.page=action.payload;}},extraReducers:function extraReducers(builder){builder.addCase(fetchNewSong.pending,function(state,action){state.loading=\"loading\";}).addCase(fetchNewSong.fulfilled,function(state,action){state.loading=\"success\";state.data=action.payload;state.page=1;}).addCase(fetchNewSong.rejected,function(state,action){state.loading=\"error\";state.error=action.error.message;});}});export default songSlice.reducer;var setPage=songSlice.actions.setPage;export{setPage};export var selectSongData=function selectSongData(state){return state.song.data;};export var selectSongLoading=function selectSongLoading(state){return state.song.loading;};export var selectSongError=function selectSongError(state){return state.song.loading;};export var selectSongPage=function selectSongPage(state){return state.song.page;};","map":{"version":3,"sources":["D:/zingmp3/src/Redux/Song/songSlice.js"],"names":["createSlice","createAsyncThunk","db","fetchNewSong","collection","get","data","docs","map","e","songSlice","name","initialState","error","loading","page","reducers","setPage","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","reducer","actions","selectSongData","song","selectSongLoading","selectSongError","selectSongPage"],"mappings":"+PAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,EAAP,KAAe,uCAAf,CACA,MAAO,IAAMC,CAAAA,YAAY,CAAGF,gBAAgB,CAAC,gBAAD,sEAAmB,kKAC1CC,CAAAA,EAAE,CAACE,UAAH,CAAc,KAAd,EAAqBC,GAArB,EAD0C,QACvDC,IADuD,+CAEtDA,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAc,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACH,IAAF,EAAP,EAAd,CAFsD,wDAAnB,GAArC,CAIP,GAAMI,CAAAA,SAAS,CAAGV,WAAW,CAAC,CAC5BW,IAAI,CAAE,MADsB,CAE5BC,YAAY,CAAE,CACZN,IAAI,CAAE,EADM,CAEZO,KAAK,CAAE,IAFK,CAGZC,OAAO,CAAE,MAHG,CAIZC,IAAI,CAAE,CAJM,CAFc,CAQ5BC,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACH,IAAN,CAAaI,MAAM,CAACC,OAApB,CACD,CAHO,CARkB,CAa5BC,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CACJC,OADH,CACWpB,YAAY,CAACqB,OADxB,CACiC,SAACN,KAAD,CAAQC,MAAR,CAAmB,CAChDD,KAAK,CAACJ,OAAN,CAAgB,SAAhB,CACD,CAHH,EAIGS,OAJH,CAIWpB,YAAY,CAACsB,SAJxB,CAImC,SAACP,KAAD,CAAQC,MAAR,CAAmB,CAClDD,KAAK,CAACJ,OAAN,CAAgB,SAAhB,CACAI,KAAK,CAACZ,IAAN,CAAaa,MAAM,CAACC,OAApB,CACAF,KAAK,CAACH,IAAN,CAAa,CAAb,CACD,CARH,EASGQ,OATH,CASWpB,YAAY,CAACuB,QATxB,CASkC,SAACR,KAAD,CAAQC,MAAR,CAAmB,CACjDD,KAAK,CAACJ,OAAN,CAAgB,OAAhB,CACAI,KAAK,CAACL,KAAN,CAAcM,MAAM,CAACN,KAAP,CAAac,OAA3B,CACD,CAZH,EAaD,CA3B2B,CAAD,CAA7B,CA8BA,cAAejB,CAAAA,SAAS,CAACkB,OAAzB,CACO,GAAQX,CAAAA,OAAR,CAAoBP,SAAS,CAACmB,OAA9B,CAAQZ,OAAR,C,gBACP,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACZ,KAAD,QAAWA,CAAAA,KAAK,CAACa,IAAN,CAAWzB,IAAtB,EAAvB,CACP,MAAO,IAAM0B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACd,KAAD,QAAWA,CAAAA,KAAK,CAACa,IAAN,CAAWjB,OAAtB,EAA1B,CACP,MAAO,IAAMmB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACf,KAAD,QAAWA,CAAAA,KAAK,CAACa,IAAN,CAAWjB,OAAtB,EAAxB,CACP,MAAO,IAAMoB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAChB,KAAD,QAAWA,CAAAA,KAAK,CAACa,IAAN,CAAWhB,IAAtB,EAAvB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport db from \"../../ZingMP3/HomePage/FirebaseConfig\";\r\nexport const fetchNewSong = createAsyncThunk(\"song/fetch/new\", async () => {\r\n  const data = await db.collection(\"His\").get();\r\n  return data.docs.map((e) => e.data());\r\n});\r\nconst songSlice = createSlice({\r\n  name: \"song\",\r\n  initialState: {\r\n    data: [],\r\n    error: null,\r\n    loading: \"idle\",\r\n    page: 1,\r\n  },\r\n  reducers: {\r\n    setPage: (state, action) => {\r\n      state.page = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchNewSong.pending, (state, action) => {\r\n        state.loading = \"loading\";\r\n      })\r\n      .addCase(fetchNewSong.fulfilled, (state, action) => {\r\n        state.loading = \"success\";\r\n        state.data = action.payload;\r\n        state.page = 1;\r\n      })\r\n      .addCase(fetchNewSong.rejected, (state, action) => {\r\n        state.loading = \"error\";\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default songSlice.reducer;\r\nexport const { setPage } = songSlice.actions;\r\nexport const selectSongData = (state) => state.song.data;\r\nexport const selectSongLoading = (state) => state.song.loading;\r\nexport const selectSongError = (state) => state.song.loading;\r\nexport const selectSongPage = (state) => state.song.page;\r\n"]},"metadata":{},"sourceType":"module"}