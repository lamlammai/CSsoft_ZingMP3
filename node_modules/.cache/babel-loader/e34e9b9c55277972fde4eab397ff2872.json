{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\learning-react\\\\src\\\\Redux\\\\couter\\\\component\\\\ButtonIncrement.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { incrementNumber } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ButtonIncrement = props => {\n  _s();\n\n  const count = useSelector(state => state.counter.count);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(incrementNumber(count)),\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // const mapStateToProps = state => ({\n//   count: state.counter.count\n// });\n// const mapDispatchToProps = dispatch => ({\n//   increment: n => dispatch(incrementNumber(n)) \n// })\n// const ConnectButtonIncrement = connect(mapStateToProps, mapDispatchToProps)(ButtonIncrement);\n\n\n_s(ButtonIncrement, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ButtonIncrement;\nexport default _c2 = /*#__PURE__*/React.memo(ButtonIncrement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonIncrement\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/REACTJS/learning-react/src/Redux/couter/component/ButtonIncrement.js"],"names":["React","connect","useDispatch","useSelector","incrementNumber","ButtonIncrement","props","count","state","counter","dispatch","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,KAAxB,CAAzB;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;AACA,sBACE;AAAA,2BACE;AACE,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAACN,eAAe,CAACG,KAAD,CAAhB,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAbD,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;;;GApBMF,e;UACUF,W,EACGD,W;;;KAFbG,e;AAqBN,kCAAeL,KAAK,CAACW,IAAN,CAAWN,eAAX,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { incrementNumber } from '../actions/index';\r\n\r\nconst ButtonIncrement = (props) => {\r\n  const count = useSelector(state => state.counter.count);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => dispatch(incrementNumber(count))}\r\n      > + </button>\r\n      {/* <button\r\n        onClick={() => props.increment(props.count)}\r\n      > + </button> */}\r\n    </>\r\n  )\r\n}\r\n// const mapStateToProps = state => ({\r\n//   count: state.counter.count\r\n// });\r\n// const mapDispatchToProps = dispatch => ({\r\n//   increment: n => dispatch(incrementNumber(n)) \r\n// })\r\n// const ConnectButtonIncrement = connect(mapStateToProps, mapDispatchToProps)(ButtonIncrement);\r\nexport default React.memo(ButtonIncrement);"]},"metadata":{},"sourceType":"module"}