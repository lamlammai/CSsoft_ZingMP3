{"ast":null,"code":"import _slicedToArray from\"D:/REACTJS/learning-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Pagination from\"../Pagination/Pagination\";import CarouselItem from\"../CarouselItem/CarouselItem\";import db from\"../../FirebaseConfig\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CarouselSongSuggestions(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),song=_useState2[0],setSongs=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),currentPage=_useState4[0],setCurrentPage=_useState4[1];var _useState5=useState(5),_useState6=_slicedToArray(_useState5,1),postPerPage=_useState6[0];useEffect(function(){db.collection(\"suggestions\").get().then(function(snapshot){snapshot.docs.forEach(function(element){setSongs(snapshot.docs.map(function(e){return e.data();}));});});},[]);if((song===null||song===void 0?void 0:song.length)===0)return null;var indexOfLastPost=currentPage*postPerPage;var indexOfFirstPost=indexOfLastPost-postPerPage;var currentPost=song[0].list.slice(indexOfFirstPost,indexOfLastPost);//set page\nvar paginate=function paginate(Page){return setCurrentPage(Page);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"CarouselTitle\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"CarouselText\",children:song[0].title}),/*#__PURE__*/_jsx(Pagination,{postPerPage:postPerPage,totalPost:song[0].list.length,paginate:paginate,currentPage:currentPage})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Carousel\",children:currentPost.map(function(item,i){return/*#__PURE__*/_jsx(CarouselItem,{item:item},i);})})]});}export default CarouselSongSuggestions;","map":{"version":3,"sources":["D:/REACTJS/learning-react/src/ZingMP3/HomePage/Atoms/CarouselSongSuggestions/CarouselSongSuggestions.js"],"names":["React","useEffect","useState","Pagination","CarouselItem","db","CarouselSongSuggestions","song","setSongs","currentPage","setCurrentPage","postPerPage","collection","get","then","snapshot","docs","forEach","element","map","e","data","length","indexOfLastPost","indexOfFirstPost","currentPost","list","slice","paginate","Page","title","item","i"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,EAAP,KAAe,sBAAf,C,6IAEA,QAASC,CAAAA,uBAAT,EAAmC,CACjC,cAAyBJ,QAAQ,CAAC,EAAD,CAAjC,wCAAOK,IAAP,eAAaC,QAAb,eACA,eAAsCN,QAAQ,CAAC,CAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,eAAsBR,QAAQ,CAAC,CAAD,CAA9B,yCAAOS,WAAP,eACAV,SAAS,CAAC,UAAM,CACdI,EAAE,CAACO,UAAH,CAAc,aAAd,EACGC,GADH,GAEGC,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,SAACC,OAAD,CAAa,CACjCV,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcG,GAAd,CAAkB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EAAlB,CAAD,CAAR,CACD,CAFD,EAGD,CANH,EAOD,CARQ,CAQN,EARM,CAAT,CASA,GAAI,CAAAd,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEe,MAAN,IAAiB,CAArB,CAAwB,MAAO,KAAP,CACxB,GAAMC,CAAAA,eAAe,CAAGd,WAAW,CAAGE,WAAtC,CACA,GAAMa,CAAAA,gBAAgB,CAAGD,eAAe,CAAGZ,WAA3C,CACA,GAAMc,CAAAA,WAAW,CAAGlB,IAAI,CAAC,CAAD,CAAJ,CAAQmB,IAAR,CAAaC,KAAb,CAAmBH,gBAAnB,CAAqCD,eAArC,CAApB,CAEA;AACA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAUnB,CAAAA,cAAc,CAACmB,IAAD,CAAxB,EAAjB,CACA,mBACE,wCACE,aAAK,SAAS,CAAC,eAAf,wBACE,UAAG,SAAS,CAAC,cAAb,UAA6BtB,IAAI,CAAC,CAAD,CAAJ,CAAQuB,KAArC,EADF,cAEE,KAAC,UAAD,EACE,WAAW,CAAEnB,WADf,CAEE,SAAS,CAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQmB,IAAR,CAAaJ,MAF1B,CAGE,QAAQ,CAAEM,QAHZ,CAIE,WAAW,CAAEnB,WAJf,EAFF,GADF,cAUE,YAAK,SAAS,CAAC,UAAf,UACCgB,WAAW,CAACN,GAAZ,CAAgB,SAACY,IAAD,CAAOC,CAAP,qBACb,KAAC,YAAD,EAAsB,IAAI,CAAED,IAA5B,EAAmBC,CAAnB,CADa,EAAhB,CADD,EAVF,GADF,CAkBD,CACD,cAAe1B,CAAAA,uBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport CarouselItem from \"../CarouselItem/CarouselItem\";\r\nimport db from \"../../FirebaseConfig\";\r\n\r\nfunction CarouselSongSuggestions() {\r\n  const [song, setSongs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postPerPage] = useState(5);\r\n  useEffect(() => {\r\n    db.collection(\"suggestions\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((element) => {\r\n          setSongs(snapshot.docs.map((e) => e.data()));\r\n        });\r\n      });\r\n  }, []);\r\n  if (song?.length === 0) return null;\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n  const currentPost = song[0].list.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  //set page\r\n  const paginate = (Page) => setCurrentPage(Page);\r\n  return (\r\n    <>\r\n      <div className=\"CarouselTitle\">\r\n        <p className=\"CarouselText\">{song[0].title}</p>\r\n        <Pagination\r\n          postPerPage={postPerPage}\r\n          totalPost={song[0].list.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n      <div className=\"Carousel\">\r\n      {currentPost.map((item, i) => (\r\n          <CarouselItem key={i} item={item} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default CarouselSongSuggestions;\r\n"]},"metadata":{},"sourceType":"module"}