{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\learning-react\\\\src\\\\ZingMP3\\\\HomePage\\\\Atoms\\\\Avatar\\\\Avatar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Avatar.css\";\nimport firebase from \"firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst avt = {\n  name: \"Avatar\",\n  icon: \"https://vaithuhayho.com/wp-content/uploads/2021/03/anh-avatar-dep-21.jpg\",\n  icon2: \"https://anhdep123.com/wp-content/uploads/2021/05/hinh-avatar-trang.jpg\"\n};\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nfunction Avatar() {\n  _s();\n\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n  // Listen to the Firebase Auth state and set the local state.\n\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      setIsSignedIn(!!user);\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Signin\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: avt.name,\n          className: avt.name,\n          src: avt.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/Signin\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: avt.name,\n        className: avt.name,\n        src: avt.icon2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Avatar, \"ES28sB8qKBhxH4u/sxzLxEgNPXw=\");\n\n_c = Avatar;\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"sources":["D:/REACTJS/learning-react/src/ZingMP3/HomePage/Atoms/Avatar/Avatar.js"],"names":["React","useEffect","useState","Link","firebase","avt","name","icon","icon2","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","Avatar","isSignedIn","setIsSignedIn","unregisterAuthObserver","onAuthStateChanged","user"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAoB,kBAApB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,IAAI,EAAE,QADI;AAEVC,EAAAA,IAAI,EAAE,0EAFI;AAGVC,EAAAA,KAAK,EAAC;AAHI,CAAZ;AAKA,MAAMC,QAAQ,GAAG;AACf;AACAC,EAAAA,UAAU,EAAE,OAFG;AAGf;AACAC,EAAAA,aAAa,EAAE,CACbP,QAAQ,CAACQ,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEbV,QAAQ,CAACQ,IAAT,CAAcG,oBAAd,CAAmCD,WAFtB,CAJA;AAQfE,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,2BAA2B,EAAE,MAAM;AAF1B;AARI,CAAjB;;AAcA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C,CADgB,CACqC;AAErD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,sBAAsB,GAAGjB,QAAQ,CAACQ,IAAT,GAAgBU,kBAAhB,CAAmCC,IAAI,IAAI;AACxEH,MAAAA,aAAa,CAAC,CAAC,CAACG,IAAH,CAAb;AACD,KAF8B,CAA/B;AAGA,WAAO,MAAMF,sBAAsB,EAAnC,CAJc,CAIyB;AACxC,GALQ,EAKN,EALM,CAAT;;AAOA,MAAI,CAACF,UAAL,EAAiB;AACf,wBACE;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEd,GAAG,CAACC,IAAd;AAAoB,UAAA,SAAS,EAAED,GAAG,CAACC,IAAnC;AAAyC,UAAA,GAAG,EAAED,GAAG,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADD,qBADF;AAOD;;AACD,sBACE;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEF,GAAG,CAACC,IAAd;AAAoB,QAAA,SAAS,EAAED,GAAG,CAACC,IAAnC;AAAyC,QAAA,GAAG,EAAED,GAAG,CAACG;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAOD;;GA3BQU,M;;KAAAA,M;AA6BR,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport \"./Avatar.css\";\r\nimport firebase from \"firebase\";\r\nconst avt = {\r\n  name: \"Avatar\",\r\n  icon: \"https://vaithuhayho.com/wp-content/uploads/2021/03/anh-avatar-dep-21.jpg\",\r\n  icon2:\"https://anhdep123.com/wp-content/uploads/2021/05/hinh-avatar-trang.jpg\"\r\n};\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n  ],\r\n  callbacks: {\r\n    // Avoid redirects after sign-in.\r\n    signInSuccessWithAuthResult: () => false,\r\n  },\r\n};\r\n\r\nfunction Avatar() {\r\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\r\n\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\r\n      setIsSignedIn(!!user);\r\n    });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n  }, []);\r\n\r\n  if (!isSignedIn) {\r\n    return (\r\n      <>\r\n       <Link to=\"/Signin\">\r\n         <img alt={avt.name} className={avt.name} src={avt.icon} />\r\n       </Link>\r\n     </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n    <Link to=\"/Signin\">\r\n      <img alt={avt.name} className={avt.name} src={avt.icon2} />\r\n    </Link>\r\n  </>\r\n  );\r\n}\r\n\r\n export default Avatar;\r\n"]},"metadata":{},"sourceType":"module"}